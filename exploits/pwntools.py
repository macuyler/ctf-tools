#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# pylint: disable=line-too-long,missing-module-docstring,wildcard-import,redefined-builtin,unused-wildcard-import,pointless-string-statement,invalid-name,undefined-variable,missing-function-docstring

from pwn import *

"""
# Setup Steps:
    1. Set binary to the path to your binary.
    2. Set host to the remote ip or domain.
    3. Set port to the remote port.
    4. Update get_payload and exploit to get the flag! :)
"""

binary = args.BINARY or './challenge'
elf    = ELF(binary)
host   = args.HOST   or '127.0.0.1'
port   = args.PORT   or 8080


# Context Settings
context.terminal = ['tmux', 'splitw', '-h']
context.log_level = args.LOGS or 'debug'
context.binary = elf


def get_payload(): # Custom Payload
    pl = p32(0xdeadbeef)
    return pl

def exploit(): # Custom Exploit
    io.recvuntil(b'Hello World!\n')
    io.sendline(get_payload())
    io.interactive()


gdbscript = """
continue
""".format(**locals())

def local_io():
    if args.GDB:
        return gdb.debug(binary, gdbscript=gdbscript)
    return process(binary)

def remote_io():
    rio = remote(host, port)
    if args.GDB:
        return gdb.attach(rio, gdbscript=gdbscript)
    return rio

if __name__ == '__main__':
    if args.LOCAL:
        io = local_io()
    else:
        io = remote_io()
    exploit()
